server.servlet.context-path=/

spring.datasource.url=jdbc:postgresql:///postgres
spring.datasource.username=${PGUSER}
spring.datasource.password=${PGPASSWORD}
spring.datasource.driverClassName=org.postgresql.Driver

spring.cloud.gcp.sql.database-name=${PGDATABASE}
spring.cloud.gcp.sql.instance-connection-name=${CONNECTION_NAME}

spring.datasource.hikari.data-source-properties.socketFactory=com.google.cloud.sql.postgres.SocketFactory
spring.datasource.hikari.data-source-properties.cloudSqlInstance=${CONNECTION_NAME}

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}

jwt.secret=${JWT_SECRET}
jwt.exptime=${JWT_EXPIRATION_TIME}

config.enable-traditional-register=${ENABLE_TRADITIONAL_REGISTER}

spring.security.oauth2.client.access-token-uri=oauth2.googleapis.com/token 
spring.security.oauth2.client.user-authorization-uri=accounts.google.com/o/oauth2/auth 
spring.security.oauth2.client.scope= googleapis.com/auth/userinfo.email, googleapis.com/auth/userinfo.profile 
spring.security.oauth2.resource.user-info-uri= googleapis.com/oauth2/v3/userinfo?alt=json 