buildscript {    // Configuration for building
  repositories {
    jcenter()    // Bintray's repository - a fast Maven Central mirror & more
    mavenCentral()
  }
  dependencies {
    classpath 'com.google.cloud.tools:appengine-gradle-plugin:2.4.5' // If a newer version is available, use it
  }
}

plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.0.7'
	id 'io.spring.dependency-management' version '1.1.0'
}

apply plugin: 'com.google.cloud.tools.appengine'

repositories {
	mavenCentral()
	maven { url "https://jitpack.io" }
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots' /* SNAPSHOT repository (if needed)*/}
	jcenter()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}


dependencies {
	implementation 'com.google.appengine:appengine-api-1.0-sdk:+'  // Latest App Engine Api's
	implementation 'com.google.cloud:spring-cloud-gcp-dependencies:4.5.1'
	implementation 'com.google.cloud:spring-cloud-gcp-starter-sql-postgresql:2.0.3'
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'

	providedCompile 'org.slf4j:jul-to-slf4j:1.7.30'

    implementation 'jstl:jstl:1.2'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation ('org.springframework.boot:spring-boot-starter-web'){
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
	}
	providedCompile 'org.springframework.boot:spring-boot-starter-tomcat'
	implementation 'org.springframework.security:spring-security-crypto'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'com.github.kenglxn.QRGen:javase:3.0.1'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	testImplementation 'junit:junit:4.13.2'
	testImplementation 'com.google.truth:truth:1.1.5'
	testImplementation 'org.mockito:mockito-core:4.11.0'

	testImplementation 'com.google.appengine:appengine-testing:+'
	testImplementation 'com.google.appengine:appengine-api-stubs:+'
	testImplementation 'com.google.appengine:appengine-tools-sdk:+'

}



tasks.named('test') {
	useJUnitPlatform()
}

war {
    manifest {
        attributes 'Main-Class': gradle.ext.mainClassName
    }
}

// Always run unit tests
appengineDeploy.dependsOn test
appengineStage.dependsOn test

appengine {  // App Engine tasks configuration
  deploy {   // deploy configuration
    projectId = 'villaticket'
    version = '1'
  }
}

test {
  useJUnit()
  testLogging.showStandardStreams = true
  beforeTest { descriptor ->
     logger.lifecycle("test: " + descriptor + "  Running")
  }

  onOutput { descriptor, event ->
     logger.lifecycle("test: " + descriptor + ": " + event.message )
  }
  afterTest { descriptor, result ->
    logger.lifecycle("test: " + descriptor + ": " + result )
  }
}

group = 'com.bancrabs'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'